{
	"name": "dataflow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText10",
						"type": "DatasetReference"
					},
					"name": "EmpData"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText11",
						"type": "DatasetReference"
					},
					"name": "IndiaData"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText12",
						"type": "DatasetReference"
					},
					"name": "USAData"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText13",
						"type": "DatasetReference"
					},
					"name": "UKData"
				}
			],
			"transformations": [
				{
					"name": "split1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          emp_id as string,",
				"          name as string,",
				"          salary as string,",
				"          address as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> EmpData",
				"EmpData split(equals(address, 'india'),",
				"     equals(name, 'uas'),",
				"     equals(name, 'uk'),",
				"     disjoint: true) ~> split1@(india, usa, uk)",
				"split1@india sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> IndiaData",
				"split1@usa sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> USAData",
				"split1@uk sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> UKData"
			]
		}
	}
}